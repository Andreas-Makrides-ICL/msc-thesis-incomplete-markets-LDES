Checking solver status before result extraction...
Status: OPTIMAL
Primal status: FEASIBLE_POINT
Risk aversion (δ): 0.5, CVaR confidence (Ψ): 0.5

------------------------------------------------------------------------------------------------------------------
Iter  Primal Conv.  Dual Conv.    PV          Wind OnshoreWind OffshoreGas         Nuclear     BESS Pwr.   BESS En.    Duration    H2 Pwr.     H2 En.      Dur_PHS     Time      Total Time
------------------------------------------------------------------------------------------------------------------
CENT   -             -            54.10       36.60       65.88       4.00        69.29       0.01        0.15        12.00       0.06        0.26        4.00        120.33s   120.33s   

Total Installed Capacity: 229.95 MW

Total Installed Energy: 0.4 MWh
Average price in scenario 10 = 100.7375 [£/MWh]
Average price in scenario 11 = 132.1546 [£/MWh]
Average price in scenario 12 = 143.5314 [£/MWh]
Average price in scenario 13 = 108.9526 [£/MWh]
Average price in scenario 14 = 135.0048 [£/MWh]
Average price in scenario 15 = 117.8366 [£/MWh]
Average price in scenario 16 = 143.9612 [£/MWh]
Average price in scenario 17 = 116.5273 [£/MWh]
Average price in scenario 18 = 103.0128 [£/MWh]
Average price in scenario 19 = 130.12 [£/MWh]
Average price in scenario 1 = 107.6612 [£/MWh]
Average price in scenario 20 = 111.5355 [£/MWh]
Average price in scenario 21 = 115.9006 [£/MWh]
Average price in scenario 22 = 114.7111 [£/MWh]
Average price in scenario 23 = 147.208 [£/MWh]
Average price in scenario 24 = 114.8614 [£/MWh]
Average price in scenario 25 = 127.1875 [£/MWh]
Average price in scenario 26 = 114.752 [£/MWh]
Average price in scenario 27 = 135.7038 [£/MWh]
Average price in scenario 28 = 119.7213 [£/MWh]
Average price in scenario 29 = 109.6797 [£/MWh]
Average price in scenario 2 = 126.7192 [£/MWh]
Average price in scenario 30 = 132.0649 [£/MWh]
Average price in scenario 3 = 158.1996 [£/MWh]
Average price in scenario 4 = 128.8303 [£/MWh]
Average price in scenario 5 = 111.0957 [£/MWh]
Average price in scenario 6 = 101.23 [£/MWh]
Average price in scenario 7 = 135.5336 [£/MWh]
Average price in scenario 8 = 113.0637 [£/MWh]
Average price in scenario 9 = 99.595 [£/MWh]
Total Average price Case B = 121.9031 [£/MWh]
Total Average price Case A = 121.9031 [£/MWh]

===== Risk-Averse Objective Breakdown from model =====
Expected Term (E[W - C]):     4.872184847055893e9
CVaR Term :       4.791225768814125e9
CO2 price :       1.0988621383889463e7
Expected Term (δ * E[W - C]):     2.4360924235279e9
CVaR Term ((1 - δ) * CVaR) :       2.3956128844071e9
  ↳ ζ_total:                       4.85979537133e9
  ↳ u_total[o]:                    Dict(5 => 815.9347, 16 => 1.1092, 20 => 3.0642942949e6, 12 => 1.1092, 24 => 1.1092, 28 => 1.96306371315e7, 30 => 1.1092, 17 => 1.096362035204e8, 8 => 1.1092, 1 => 1.1092, 19 => 218099.7438, 22 => 1.1092, 23 => 1.1092, 6 => 1.773223422278e8, 11 => 1.1092, 9 => 1.350800527608e8, 14 => 1.104458690929e8, 3 => 6.20007361339e7, 29 => 1.1092, 7 => 1.1092, 25 => 4.0873672529e6, 13 => 1.1092, 15 => 6.36838853451e7, 21 => 1.841924609857e8, 2 => 4.2024103053e6, 10 => 1.361673797464e8, 18 => 1.88114666923e7, 26 => 1.1092, 27 => 1.1092, 4 => 1.1092)
Full Objective Value:             4.831705307934996e9
===========================================
For scenario 10: Demand value = 4.8271514075708e9, Total costs = 6.70475064554e7
For scenario 11: Demand value = 4.9938208558427e9, Total costs = 7.02632276095e7
For scenario 12: Demand value = 4.9935970727549e9, Total costs = 7.21227676357e7
For scenario 13: Demand value = 5.0806868096841e9, Total costs = 7.20255448019e7
For scenario 14: Demand value = 4.8562941889348e9, Total costs = 7.0411522783e7
For scenario 15: Demand value = 4.9043313004771e9, Total costs = 7.05631273386e7
For scenario 16: Demand value = 5.1852714330058e9, Total costs = 7.20981041907e7
For scenario 17: Demand value = 4.8562969676054e9, Total costs = 6.94734837507e7
For scenario 18: Demand value = 4.950562716761e9, Total costs = 6.94748696795e7
For scenario 19: Demand value = 4.968064075414e9, Total costs = 6.79393399213e7
For scenario 1: Demand value = 5.062053605047e9, Total costs = 6.72476018895e7
For scenario 20: Demand value = 4.9685889406246e9, Total costs = 7.1221209082e7
For scenario 21: Demand value = 4.7834611933665e9, Total costs = 7.31010330278e7
For scenario 22: Demand value = 5.1864492239281e9, Total costs = 7.27288057984e7
For scenario 23: Demand value = 5.0319666964708e9, Total costs = 7.26293485231e7
For scenario 24: Demand value = 5.03317212238e9, Total costs = 7.09305468703e7
For scenario 25: Demand value = 4.9666266387953e9, Total costs = 7.08738380169e7
For scenario 26: Demand value = 5.062056150653e9, Total costs = 6.90685814921e7
For scenario 27: Demand value = 5.1859640516377e9, Total costs = 7.50965817455e7
For scenario 28: Demand value = 4.950082913058e9, Total costs = 7.00236008945e7
For scenario 29: Demand value = 5.0621490068605e9, Total costs = 7.27004481729e7
For scenario 2: Demand value = 4.9681208676624e9, Total costs = 7.20355501668e7
For scenario 30: Demand value = 5.0325891146518e9, Total costs = 7.1998735004e7
For scenario 3: Demand value = 4.9030883871321e9, Total costs = 6.82371455698e7
For scenario 4: Demand value = 5.0802462281057e9, Total costs = 7.14446279982e7
For scenario 5: Demand value = 4.9670116740182e9, Total costs = 6.69949812854e7
For scenario 6: Demand value = 4.7836575321071e9, Total costs = 6.62413262116e7
For scenario 7: Demand value = 4.994509337328e9, Total costs = 7.09342695609e7
For scenario 8: Demand value = 5.0332171300567e9, Total costs = 7.33542921824e7
For scenario 9: Demand value = 4.8271431164752e9, Total costs = 6.59711115918e7

===== Risk-Averse Objective Breakdown Manual Calculation =====
Expected Term (E[W - C]):     4.912799254305303e9
CVaR Term :       4.791225768814125e9
CO2 Price :       1.0988621383889463e7
Expected Term (δ * E[W - C]):     2.4563996271527e9
CVaR Term ((1 - δ) * CVaR) :       2.3956128844071e9
  ↳ ζ_total:                       4.85979537133e9
  ↳ u_total[o]:                    Dict(5 => 815.9347, 16 => 1.1092, 20 => 3.0642942949e6, 12 => 1.1092, 24 => 1.1092, 28 => 1.96306371315e7, 30 => 1.1092, 17 => 1.096362035204e8, 8 => 1.1092, 1 => 1.1092, 19 => 218099.7438, 22 => 1.1092, 23 => 1.1092, 6 => 1.773223422278e8, 11 => 1.1092, 9 => 1.350800527608e8, 14 => 1.104458690929e8, 3 => 6.20007361339e7, 29 => 1.1092, 7 => 1.1092, 25 => 4.0873672529e6, 13 => 1.1092, 15 => 6.36838853451e7, 21 => 1.841924609857e8, 2 => 4.2024103053e6, 10 => 1.361673797464e8, 18 => 1.88114666923e7, 26 => 1.1092, 27 => 1.1092, 4 => 1.1092)
Full Objective Value:             4.852012511559713e9
===========================================

===== Unserved demand per scenario =====
  Scenario 10 → Unserved Demand Fix = 1.4319590319643183, Unserved Demand Flex = 503.2580378021575, Total Unserved Demand = 504.6899968341218
  Scenario 11 → Unserved Demand Fix = 99.44894001867348, Unserved Demand Flex = 665.5067887741025, Total Unserved Demand = 764.955728792776
  Scenario 12 → Unserved Demand Fix = 107.98152920010943, Unserved Demand Flex = 718.172805280676, Total Unserved Demand = 826.1543344807855
  Scenario 13 → Unserved Demand Fix = 1.6202894021286482, Unserved Demand Flex = 551.3493766120051, Total Unserved Demand = 552.9696660141337
  Scenario 14 → Unserved Demand Fix = 6.692905609870202, Unserved Demand Flex = 666.938602747863, Total Unserved Demand = 673.6315083577332
  Scenario 15 → Unserved Demand Fix = 1.455994998168329, Unserved Demand Flex = 584.7200345611591, Total Unserved Demand = 586.1760295593274
  Scenario 16 → Unserved Demand Fix = 33.334656858346705, Unserved Demand Flex = 721.134877899709, Total Unserved Demand = 754.4695347580557
  Scenario 17 → Unserved Demand Fix = 44.41127805009065, Unserved Demand Flex = 578.941187413392, Total Unserved Demand = 623.3524654634826
  Scenario 18 → Unserved Demand Fix = 1.4691426435867285, Unserved Demand Flex = 513.0721533585862, Total Unserved Demand = 514.5412960021729
  Scenario 19 → Unserved Demand Fix = 1.4755431376812567, Unserved Demand Flex = 645.5600598805, Total Unserved Demand = 647.0356030181813
  Scenario 1 → Unserved Demand Fix = 1.6149811417252025, Unserved Demand Flex = 549.9975274510873, Total Unserved Demand = 551.6125085928126
  Scenario 20 → Unserved Demand Fix = 1.47470625892867, Unserved Demand Flex = 553.2232155780383, Total Unserved Demand = 554.697921836967
  Scenario 21 → Unserved Demand Fix = 1.419033904368625, Unserved Demand Flex = 572.785781963458, Total Unserved Demand = 574.2048158678266
  Scenario 22 → Unserved Demand Fix = 1.6526275196424791, Unserved Demand Flex = 579.2886878134872, Total Unserved Demand = 580.9413153331296
  Scenario 23 → Unserved Demand Fix = 24.84568453284097, Unserved Demand Flex = 737.8688426000167, Total Unserved Demand = 762.7145271328577
  Scenario 24 → Unserved Demand Fix = 1.6065502478194773, Unserved Demand Flex = 581.4775856524316, Total Unserved Demand = 583.084135900251
  Scenario 25 → Unserved Demand Fix = 1.4746971017836472, Unserved Demand Flex = 629.6433292436511, Total Unserved Demand = 631.1180263454348
  Scenario 26 → Unserved Demand Fix = 1.6152412967489127, Unserved Demand Flex = 581.6794539976258, Total Unserved Demand = 583.2946952943747
  Scenario 27 → Unserved Demand Fix = 2.5753917122611085, Unserved Demand Flex = 679.2660497177777, Total Unserved Demand = 681.8414414300388
  Scenario 28 → Unserved Demand Fix = 1.4701536911061766, Unserved Demand Flex = 593.4693800347669, Total Unserved Demand = 594.939533725873
  Scenario 29 → Unserved Demand Fix = 1.6148146838359665, Unserved Demand Flex = 553.9974312599268, Total Unserved Demand = 555.6122459437628
  Scenario 2 → Unserved Demand Fix = 1.4760223582054124, Unserved Demand Flex = 627.7864101345365, Total Unserved Demand = 629.2624324927419
  Scenario 30 → Unserved Demand Fix = 11.226693071513132, Unserved Demand Flex = 662.6383887299185, Total Unserved Demand = 673.8650818014316
  Scenario 3 → Unserved Demand Fix = 1.4568183867028424, Unserved Demand Flex = 783.0567196024442, Total Unserved Demand = 784.513537989147
  Scenario 4 → Unserved Demand Fix = 1.6209396140734569, Unserved Demand Flex = 648.1681013893525, Total Unserved Demand = 649.789041003426
  Scenario 5 → Unserved Demand Fix = 1.4748702309787518, Unserved Demand Flex = 553.2629321727803, Total Unserved Demand = 554.7378024037591
  Scenario 6 → Unserved Demand Fix = 1.4189399720781708, Unserved Demand Flex = 504.9888359013203, Total Unserved Demand = 506.40777587339846
  Scenario 7 → Unserved Demand Fix = 18.34646720004546, Unserved Demand Flex = 681.8954121304721, Total Unserved Demand = 700.2418793305176
  Scenario 8 → Unserved Demand Fix = 1.6061608837212589, Unserved Demand Flex = 571.0299484661989, Total Unserved Demand = 572.6361093499202
  Scenario 9 → Unserved Demand Fix = 1.4319532606389345, Unserved Demand Flex = 497.38783221219404, Total Unserved Demand = 498.81978547283296

Total Unserved Demand across all scenarios:
 Total Unserved Demand Fix = 12.691499533987948, Total Unserved Demand Flex = 609.7188596793877, Total Unserved Demand = 622.4103592133756
====================================


Total MWh of gas = 192829.51633710376
====================================


===== CVaR Tail Dual Analysis =====
Raw dual values (all shown):
  Scenario 10 → dual = -3.333603185847e-02
  Scenario 11 → dual = 7.139018766458e-10
  Scenario 12 → dual = 5.921655514951e-10
  Scenario 13 → dual = 1.399131387986e-09
  Scenario 14 → dual = -3.333603197661e-02
  Scenario 15 → dual = -3.333603159772e-02
  Scenario 16 → dual = 2.438502160123e-09
  Scenario 17 → dual = -3.333603212011e-02
  Scenario 18 → dual = -3.333602796050e-02
  Scenario 19 → dual = -3.333573465146e-02
  Scenario 1 → dual = 1.259022421740e-09
  Scenario 20 → dual = -3.333600233355e-02
  Scenario 21 → dual = -3.333603216054e-02
  Scenario 22 → dual = 2.438621048937e-09
  Scenario 23 → dual = 1.070247951454e-09
  Scenario 24 → dual = 1.113787122925e-09
  Scenario 25 → dual = -3.333601604060e-02
  Scenario 26 → dual = 1.283331042217e-09
  Scenario 27 → dual = 1.511627064065e-09
  Scenario 28 → dual = -3.333602852059e-02
  Scenario 29 → dual = 1.182000692732e-09
  Scenario 2 → dual = -3.333601940758e-02
  Scenario 30 → dual = 1.221262564712e-09
  Scenario 3 → dual = -3.333603053815e-02
  Scenario 4 → dual = 1.210843566229e-09
  Scenario 5 → dual = -3.329061090608e-02
  Scenario 6 → dual = -3.333603248894e-02
  Scenario 7 → dual = 6.142506288864e-10
  Scenario 8 → dual = 1.301758513893e-09
  Scenario 9 → dual = -3.333603190223e-02

Normalized risk-adjusted probabilities:
====================================

===== CVaR Constraint Tightness per Scenario =====
Scenario 10: welfare = 4.7236287693962e9, LHS = 1.361666019384e8, RHS = 1.361673797464e8, Gap = -777.808
Scenario 11: welfare = 4.8826377070478e9, LHS = -2.28423357132e7, RHS = 1.1092, Gap = -2.28423368224e7
Scenario 12: welfare = 4.880646598481e9, LHS = -2.08512271465e7, RHS = 1.1092, Gap = -2.08512282557e7
Scenario 13: welfare = 4.9648068626674e9, LHS = -1.050114913329e8, RHS = 1.1092, Gap = -1.050114924421e8
Scenario 14: welfare = 4.7493502772659e9, LHS = 1.104450940687e8, RHS = 1.104458690929e8, Gap = -775.0242
Scenario 15: welfare = 4.7961122615995e9, LHS = 6.3683109735e7, RHS = 6.36838853451e7, Gap = -775.6101
Scenario 16: welfare = 5.0672738760244e9, LHS = -2.074785046899e8, RHS = 1.1092, Gap = -2.074785057991e8
Scenario 17: welfare = 4.750159943528e9, LHS = 1.096354278066e8, RHS = 1.096362035204e8, Gap = -775.7138
Scenario 18: welfare = 4.8409846801116e9, LHS = 1.88106912229e7, RHS = 1.88114666923e7, Gap = -775.4694
Scenario 19: welfare = 4.8595780458972e9, LHS = 217325.4374, RHS = 218099.7438, Gap = -774.3064
Scenario 1: welfare = 4.9517711758325e9, LHS = -9.19758044979e7, RHS = 1.1092, Gap = -9.19758056071e7
Scenario 20: welfare = 4.8567318485104e9, LHS = 3.0635228241e6, RHS = 3.0642942949e6, Gap = -771.4708
Scenario 21: welfare = 4.675603683118e9, LHS = 1.841916882165e8, RHS = 1.841924609857e8, Gap = -772.7692
Scenario 22: welfare = 5.0674615774018e9, LHS = -2.076662060672e8, RHS = 1.1092, Gap = -2.076662071764e8
Scenario 23: welfare = 4.9174350537732e9, LHS = -5.76396824386e7, RHS = 1.1092, Gap = -5.76396835478e7
Scenario 24: welfare = 4.9198821085327e9, LHS = -6.00867371982e7, RHS = 1.1092, Gap = -6.00867383074e7
Scenario 25: welfare = 4.8557087759178e9, LHS = 4.0865954167e6, RHS = 4.0873672529e6, Gap = -771.8362
Scenario 26: welfare = 4.9499537507304e9, LHS = -9.01583793958e7, RHS = 1.1092, Gap = -9.0158380505e7
Scenario 27: welfare = 5.0647752912946e9, LHS = -2.0497991996e8, RHS = 1.1092, Gap = -2.049799210692e8
Scenario 28: welfare = 4.8401655071442e9, LHS = 1.96298641904e7, RHS = 1.96306371315e7, Gap = -772.9411
Scenario 29: welfare = 4.9464328102605e9, LHS = -8.66374389259e7, RHS = 1.1092, Gap = -8.66374400351e7
Scenario 2: welfare = 4.8555937353954e9, LHS = 4.2016359392e6, RHS = 4.2024103053e6, Gap = -774.3662
Scenario 30: welfare = 4.9185239063287e9, LHS = -5.87285349942e7, RHS = 1.1092, Gap = -5.87285361034e7
Scenario 3: welfare = 4.7977954207037e9, LHS = 6.19999506308e7, RHS = 6.20007361339e7, Gap = -785.503
Scenario 4: welfare = 4.9651745434313e9, LHS = -1.053791720967e8, RHS = 1.1092, Gap = -1.053791732059e8
Scenario 5: welfare = 4.8597953345789e9, LHS = 36.7556, RHS = 815.9347, Gap = -779.179
Scenario 6: welfare = 4.6824738050718e9, LHS = 1.773215662628e8, RHS = 1.773223422278e8, Gap = -775.965
Scenario 7: welfare = 4.8827716220646e9, LHS = -2.29762507301e7, RHS = 1.1092, Gap = -2.29762518393e7
Scenario 8: welfare = 4.9176003445267e9, LHS = -5.78049731922e7, RHS = 1.1092, Gap = -5.78049743014e7
Scenario 9: welfare = 4.7247160950406e9, LHS = 1.350792762939e8, RHS = 1.350800527608e8, Gap = -776.4669
==================================================

========== MODEL STRUCTURE ==========

--- Objective Function ---
Sense: MAX_SENSE
Expression Type: QuadExpr
Symbolic Expression:
-180 d_flex[1,10]² - 165 d_flex[2,10]² - 150 d_flex[3,10]² - 285 d_flex[4,10]² - 285 d_flex[5,10]² - 330 d_flex[6,10]² - 150 d_flex[7,10]² - 225 d_flex[8,10]² - 135 d_flex[9,10]² - 510 d_flex[10,10]² - 210 d_flex[11,10]² - 570 d_flex[12,10]² - 735 d_flex[13,10]² - 150 d_flex[14,10]² - 210 d_flex[15,10]² - 195 d_flex[16,10]² - 60 d_flex[17,10]² - 810 d_flex[18,10]² - 735 d_flex[19,10]² - 165 d_flex[20,10]² - 330 d_flex[21,10]² - 240 d_flex[22,10]² - 240 d_flex[23,10]² - 120 d_flex[24,10]² - 480 d_flex[25,10]² - 210 d_flex[26,10]² - 225 d_flex[27,10]² - 255 d_flex[28,10]² - 210 d_flex[29,10]² - 300 d_flex[30,10]² - [[...20100 terms omitted...]] - 120 d_flex[643,9]² - 285 d_flex[644,9]² - 90 d_flex[645,9]² - 165 d_flex[646,9]² - 180 d_flex[647,9]² - 165 d_flex[648,9]² - 180 d_flex[649,9]² - 165 d_flex[650,9]² - 210 d_flex[651,9]² - 555 d_flex[652,9]² - 195 d_flex[653,9]² - 120 d_flex[654,9]² - 225 d_flex[655,9]² - 135 d_flex[656,9]² - 180 d_flex[657,9]² - 285 d_flex[658,9]² - 480 d_flex[659,9]² - 165 d_flex[660,9]² - 465 d_flex[661,9]² - 75 d_flex[662,9]² - 600 d_flex[663,9]² - 585 d_flex[664,9]² - 120 d_flex[665,9]² - 285 d_flex[666,9]² - 105 d_flex[667,9]² - 450 d_flex[668,9]² - 210 d_flex[669,9]² - 420 d_flex[670,9]² - 165 d_flex[671,9]² - 345 d_flex[672,9]² + 1800 d_fix[1,10] + 1800 d_flex[1,10] + 1650 d_fix[2,10] + 1650 d_flex[2,10] + 1500 d_fix[3,10] + 1500 d_flex[3,10] + 2850 d_fix[4,10] + 2850 d_flex[4,10] + 2850 d_fix[5,10] + 2850 d_flex[5,10] + 3300 d_fix[6,10] + 3300 d_flex[6,10] + 1500 d_fix[7,10] + 1500 d_flex[7,10] + 2250 d_fix[8,10] + 2250 d_flex[8,10] + 1350 d_fix[9,10] + 1350 d_flex[9,10] + 5100 d_fix[10,10] + 5100 d_flex[10,10] + 2100 d_fix[11,10] + 2100 d_flex[11,10] + 5700 d_fix[12,10] + 5700 d_flex[12,10] + 7350 d_fix[13,10] + 7350 d_flex[13,10] + 1500 d_fix[14,10] + 1500 d_flex[14,10] + 2100 d_fix[15,10] + 2100 d_flex[15,10] + [[...80618 terms omitted...]] - 0.03333333333333333 u_total[10] - 0.03333333333333333 u_total[11] - 0.03333333333333333 u_total[12] - 0.03333333333333333 u_total[13] - 0.03333333333333333 u_total[14] - 0.03333333333333333 u_total[15] - 0.03333333333333333 u_total[16] - 0.03333333333333333 u_total[17] - 0.03333333333333333 u_total[18] - 0.03333333333333333 u_total[19] - 0.03333333333333333 u_total[1] - 0.03333333333333333 u_total[20] - 0.03333333333333333 u_total[21] - 0.03333333333333333 u_total[22] - 0.03333333333333333 u_total[23] - 0.03333333333333333 u_total[24] - 0.03333333333333333 u_total[25] - 0.03333333333333333 u_total[26] - 0.03333333333333333 u_total[27] - 0.03333333333333333 u_total[28] - 0.03333333333333333 u_total[29] - 0.03333333333333333 u_total[2] - 0.03333333333333333 u_total[30] - 0.03333333333333333 u_total[3] - 0.03333333333333333 u_total[4] - 0.03333333333333333 u_total[5] - 0.03333333333333333 u_total[6] - 0.03333333333333333 u_total[7] - 0.03333333333333333 u_total[8] - 0.03333333333333333 u_total[9]

--- Constraints ---

• Constraint Type: MathOptInterface.EqualTo{Float64}
  Symbolic Name: SOC_limit[H2,1,10]
  Sample Expression:
    -8.399999999999999 q_ch[H2,1,10] + 21.818181818181817 q_dch[H2,1,10] + e[H2,1,10] - 0.9 x_E[H2] ∈ MathOptInterface.EqualTo{Float64}(0.0)

• Constraint Type: MathOptInterface.GreaterThan{Float64}
  Symbolic Name: gen_limits[PV,1,10]
  Sample Expression:
    -q[PV,1,10] + 0.013833333 x_g[PV] ∈ MathOptInterface.GreaterThan{Float64}(0.0)

• Constraint Type: MathOptInterface.LessThan{Float64}
  Symbolic Name: d_fix_limit[1,10]
  Sample Expression:
    d_fix[1,10] + d_flex[1,10] ∈ MathOptInterface.LessThan{Float64}(59.6182498)

• Constraint Type: MathOptInterface.LessThan{Float64}
  Symbolic Name: cvar_tail_total[10]
  Sample Expression:
    10800 d_flex[1,10]² + 9900 d_flex[2,10]² + 9000 d_flex[3,10]² + 17100 d_flex[4,10]² + 17100 d_flex[5,10]² + 19800 d_flex[6,10]² + 9000 d_flex[7,10]² + 13500 d_flex[8,10]² + 8100 d_flex[9,10]² + 30600 d_flex[10,10]² + 12600 d_flex[11,10]² + 34200 d_flex[12,10]² + 44100 d_flex[13,10]² + 9000 d_flex[14,10]² + 12600 d_flex[15,10]² + 11700 d_flex[16,10]² + 3600 d_flex[17,10]² + 48600 d_flex[18,10]² + 44100 d_flex[19,10]² + 9900 d_flex[20,10]² + 19800 d_flex[21,10]² + 14400 d_flex[22,10]² + 14400 d_flex[23,10]² + 7200 d_flex[24,10]² + 28800 d_flex[25,10]² + 12600 d_flex[26,10]² + 13500 d_flex[27,10]² + 15300 d_flex[28,10]² + 12600 d_flex[29,10]² + 18000 d_flex[30,10]² + [[...612 terms omitted...]] + 32400 d_flex[643,10]² + 19800 d_flex[644,10]² + 13500 d_flex[645,10]² + 8100 d_flex[646,10]² + 13500 d_flex[647,10]² + 16200 d_flex[648,10]² + 6300 d_flex[649,10]² + 9900 d_flex[650,10]² + 5400 d_flex[651,10]² + 5400 d_flex[652,10]² + 8100 d_flex[653,10]² + 12600 d_flex[654,10]² + 6300 d_flex[655,10]² + 15300 d_flex[656,10]² + 17100 d_flex[657,10]² + 4500 d_flex[658,10]² + 9000 d_flex[659,10]² + 11700 d_flex[660,10]² + 9900 d_flex[661,10]² + 13500 d_flex[662,10]² + 15300 d_flex[663,10]² + 18000 d_flex[664,10]² + 9900 d_flex[665,10]² + 19800 d_flex[666,10]² + 7200 d_flex[667,10]² + 26100 d_flex[668,10]² + 13500 d_flex[669,10]² + 55800 d_flex[670,10]² + 18000 d_flex[671,10]² + 12600 d_flex[672,10]² + 180 q[Nuclear,1,10] + 1560 q[Gas,1,10] + 165 q[Nuclear,2,10] + 1430 q[Gas,2,10] + 150 q[Nuclear,3,10] + 1300 q[Gas,3,10] + 285 q[Nuclear,4,10] + 2470 q[Gas,4,10] + 285 q[Nuclear,5,10] + 2470 q[Gas,5,10] + 330 q[Nuclear,6,10] + 2860 q[Gas,6,10] + 150 q[Nuclear,7,10] + 1300 q[Gas,7,10] + 225 q[Nuclear,8,10] + 1950 q[Gas,8,10] + 135 q[Nuclear,9,10] + 1170 q[Gas,9,10] + 510 q[Nuclear,10,10] + 4420 q[Gas,10,10] + 210 q[Nuclear,11,10] + 1820 q[Gas,11,10] + 570 q[Nuclear,12,10] + 4940 q[Gas,12,10] + 735 q[Nuclear,13,10] + 6370 q[Gas,13,10] + 150 q[Nuclear,14,10] + 1300 q[Gas,14,10] + 210 q[Nuclear,15,10] + 1820 q[Gas,15,10] + [[...2637 terms omitted...]] - 54000 d_flex[652,10] - 81000 d_flex[653,10] - 126000 d_flex[654,10] - 63000 d_flex[655,10] - 153000 d_flex[656,10] - 171000 d_flex[657,10] - 45000 d_flex[658,10] - 90000 d_flex[659,10] - 117000 d_flex[660,10] - 99000 d_flex[661,10] - 135000 d_flex[662,10] - 153000 d_flex[663,10] - 180000 d_flex[664,10] - 99000 d_flex[665,10] - 198000 d_flex[666,10] - 72000 d_flex[667,10] - 261000 d_flex[668,10] - 135000 d_flex[669,10] - 558000 d_flex[670,10] - 180000 d_flex[671,10] - 126000 d_flex[672,10] + 103561.36299492574 x_g[PV] + 125438.90743779452 x_g[Wind_Onshore] + 339025.5411114903 x_g[Wind_Offshore] + 607878.2065721233 x_g[Nuclear] + 143127.98790348525 x_g[Gas] + 391384.6545604954 x_P[H2] + 125431.36482686523 x_P[BESS] - u_total[10] + ζ_total ∈ MathOptInterface.LessThan{Float64}(0.0)

• Constraint Type: MathOptInterface.GreaterThan{Float64}
  Symbolic Name: (unnamed)
  Sample Expression:
    q[PV,1,10] ∈ MathOptInterface.GreaterThan{Float64}(0.0)

=====================================
