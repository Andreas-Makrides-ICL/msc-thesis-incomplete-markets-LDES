Checking solver status before result extraction...
Status: OPTIMAL
Primal status: FEASIBLE_POINT
Risk aversion (δ): 1.0, CVaR confidence (Ψ): 0.5

------------------------------------------------------------------------------------------------------------------
Iter  Primal Conv.  Dual Conv.    PV          Wind OnshoreWind OffshoreGas         Nuclear     BESS Pwr.   BESS En.    Duration    H2 Pwr.     H2 En.      Dur_PHS     Time      Total Time
------------------------------------------------------------------------------------------------------------------
CENT   -             -            58.98       36.48       65.66       4.00        69.23       0.04        0.42        12.00       0.18        0.72        4.00        67.99s    67.99s    

Total Installed Capacity: 234.57 MW

Total Installed Energy: 1.15 MWh
Average price in scenario 10 = 99.5658 [£/MWh]
Average price in scenario 11 = 131.6548 [£/MWh]
Average price in scenario 12 = 141.9862 [£/MWh]
Average price in scenario 13 = 108.7209 [£/MWh]
Average price in scenario 14 = 133.2508 [£/MWh]
Average price in scenario 15 = 116.4782 [£/MWh]
Average price in scenario 16 = 141.7835 [£/MWh]
Average price in scenario 17 = 114.9927 [£/MWh]
Average price in scenario 18 = 102.4944 [£/MWh]
Average price in scenario 19 = 127.8095 [£/MWh]
Average price in scenario 1 = 105.3561 [£/MWh]
Average price in scenario 20 = 110.6141 [£/MWh]
Average price in scenario 21 = 114.4267 [£/MWh]
Average price in scenario 22 = 113.0093 [£/MWh]
Average price in scenario 23 = 144.0341 [£/MWh]
Average price in scenario 24 = 113.8599 [£/MWh]
Average price in scenario 25 = 125.9072 [£/MWh]
Average price in scenario 26 = 111.3691 [£/MWh]
Average price in scenario 27 = 134.4593 [£/MWh]
Average price in scenario 28 = 119.4792 [£/MWh]
Average price in scenario 29 = 109.4194 [£/MWh]
Average price in scenario 2 = 123.7931 [£/MWh]
Average price in scenario 30 = 129.3833 [£/MWh]
Average price in scenario 3 = 154.623 [£/MWh]
Average price in scenario 4 = 127.2226 [£/MWh]
Average price in scenario 5 = 109.8914 [£/MWh]
Average price in scenario 6 = 99.8924 [£/MWh]
Average price in scenario 7 = 134.5571 [£/MWh]
Average price in scenario 8 = 111.7776 [£/MWh]
Average price in scenario 9 = 98.8607 [£/MWh]
Total Average price Case B = 120.3558 [£/MWh]
Total Average price Case A = 120.3558 [£/MWh]

===== Risk-Averse Objective Breakdown from model =====
Expected Term (E[W - C]):     4.872144876531728e9
CVaR Term :       -23423.326119218553
CO2 price :       1.081843355774939e7
Expected Term (δ * E[W - C]):     4.8721448765317e9
CVaR Term ((1 - δ) * CVaR) :       -0.0
  ↳ ζ_total:                       14.92
  ↳ u_total[o]:                    Dict(5 => 11719.1123, 16 => 11719.1117, 20 => 11719.1124, 12 => 11719.1123, 24 => 11719.1122, 28 => 11719.1124, 30 => 11719.1122, 17 => 11719.1695, 8 => 11719.1122, 1 => 11719.2746, 19 => 11719.1123, 22 => 11719.1117, 23 => 11719.1122, 6 => 11719.1129, 11 => 11719.1123, 9 => 11719.1128, 14 => 11719.1127, 3 => 11719.1126, 29 => 11719.1121, 7 => 11719.1123, 25 => 11719.1124, 13 => 11719.112, 15 => 11719.1126, 21 => 11719.113, 2 => 11719.1124, 10 => 11719.1227, 18 => 11719.1124, 26 => 11719.1121, 27 => 11719.1117, 4 => 11719.138)
Full Objective Value:             4.872144876531706e9
===========================================
For scenario 10: Demand value = 4.8271310604944e9, Total costs = 6.71355931022e7
For scenario 11: Demand value = 4.9938908878156e9, Total costs = 7.03055870017e7
For scenario 12: Demand value = 4.9936934871699e9, Total costs = 7.21640377748e7
For scenario 13: Demand value = 5.0806792052223e9, Total costs = 7.20810957818e7
For scenario 14: Demand value = 4.856318307224e9, Total costs = 7.04415739975e7
For scenario 15: Demand value = 4.9043306156815e9, Total costs = 7.06226113084e7
For scenario 16: Demand value = 5.1853545830096e9, Total costs = 7.21218360876e7
For scenario 17: Demand value = 4.8563046787482e9, Total costs = 6.95404658079e7
For scenario 18: Demand value = 4.9505333975832e9, Total costs = 6.9536670082e7
For scenario 19: Demand value = 4.968091345278e9, Total costs = 6.80283365875e7
For scenario 1: Demand value = 5.0621041507879e9, Total costs = 6.72845309618e7
For scenario 20: Demand value = 4.9685639890717e9, Total costs = 7.12774282225e7
For scenario 21: Demand value = 4.7834594373416e9, Total costs = 7.31065397774e7
For scenario 22: Demand value = 5.186472397453e9, Total costs = 7.27534833518e7
For scenario 23: Demand value = 5.0320849579212e9, Total costs = 7.26764631649e7
For scenario 24: Demand value = 5.0331928711004e9, Total costs = 7.09612531399e7
For scenario 25: Demand value = 4.9666277811053e9, Total costs = 7.09053148932e7
For scenario 26: Demand value = 5.0621157573822e9, Total costs = 6.91053205867e7
For scenario 27: Demand value = 5.185975646759e9, Total costs = 7.5109640305e7
For scenario 28: Demand value = 4.9500534727456e9, Total costs = 7.00980693268e7
For scenario 29: Demand value = 5.0621384498445e9, Total costs = 7.27055774557e7
For scenario 2: Demand value = 4.9681588167134e9, Total costs = 7.20929052345e7
For scenario 30: Demand value = 5.0326695192062e9, Total costs = 7.20349862908e7
For scenario 3: Demand value = 4.9031732010083e9, Total costs = 6.83724673102e7
For scenario 4: Demand value = 5.0802752729381e9, Total costs = 7.15029694943e7
For scenario 5: Demand value = 4.9670028503917e9, Total costs = 6.7089055097e7
For scenario 6: Demand value = 4.7836352581789e9, Total costs = 6.62907733668e7
For scenario 7: Demand value = 4.9945238114675e9, Total costs = 7.09711965067e7
For scenario 8: Demand value = 5.033232758776e9, Total costs = 7.33851481553e7
For scenario 9: Demand value = 4.8271160644354e9, Total costs = 6.60884570427e7

===== Risk-Averse Objective Breakdown Manual Calculation =====
Expected Term (E[W - C]):     4.912770488187972e9
CVaR Term :       -23423.326119218553
CO2 Price :       1.081843355774939e7
Expected Term (δ * E[W - C]):     4.912770488188e9
CVaR Term ((1 - δ) * CVaR) :       -0.0
  ↳ ζ_total:                       14.92
  ↳ u_total[o]:                    Dict(5 => 11719.1123, 16 => 11719.1117, 20 => 11719.1124, 12 => 11719.1123, 24 => 11719.1122, 28 => 11719.1124, 30 => 11719.1122, 17 => 11719.1695, 8 => 11719.1122, 1 => 11719.2746, 19 => 11719.1123, 22 => 11719.1117, 23 => 11719.1122, 6 => 11719.1129, 11 => 11719.1123, 9 => 11719.1128, 14 => 11719.1127, 3 => 11719.1126, 29 => 11719.1121, 7 => 11719.1123, 25 => 11719.1124, 13 => 11719.112, 15 => 11719.1126, 21 => 11719.113, 2 => 11719.1124, 10 => 11719.1227, 18 => 11719.1124, 26 => 11719.1121, 27 => 11719.1117, 4 => 11719.138)
Full Objective Value:             4.912770488187972e9
===========================================

===== Unserved demand per scenario =====
  Scenario 10 → Unserved Demand Fix = 2.2017260936423355, Unserved Demand Flex = 513.3896443856661, Total Unserved Demand = 515.5913704793085
  Scenario 11 → Unserved Demand Fix = 91.34008537829794, Unserved Demand Flex = 666.448030982599, Total Unserved Demand = 757.788116360897
  Scenario 12 → Unserved Demand Fix = 98.85040865206182, Unserved Demand Flex = 714.4727702833407, Total Unserved Demand = 813.3231789354024
  Scenario 13 → Unserved Demand Fix = 2.3105173634339167, Unserved Demand Flex = 553.4147232998449, Total Unserved Demand = 555.7252406632788
  Scenario 14 → Unserved Demand Fix = 5.7997868849589125, Unserved Demand Flex = 672.359868215202, Total Unserved Demand = 678.159655100161
  Scenario 15 → Unserved Demand Fix = 2.236674237059802, Unserved Demand Flex = 592.9545083281655, Total Unserved Demand = 595.1911825652253
  Scenario 16 → Unserved Demand Fix = 30.89731384583829, Unserved Demand Flex = 713.8063444533587, Total Unserved Demand = 744.7036582991971
  Scenario 17 → Unserved Demand Fix = 43.575186696647094, Unserved Demand Flex = 586.5008243085776, Total Unserved Demand = 630.0760110052247
  Scenario 18 → Unserved Demand Fix = 2.2546018384663427, Unserved Demand Flex = 525.582796052165, Total Unserved Demand = 527.8373978906313
  Scenario 19 → Unserved Demand Fix = 2.265202267001179, Unserved Demand Flex = 649.5916870004855, Total Unserved Demand = 651.8568892674867
  Scenario 1 → Unserved Demand Fix = 2.0645902270380034, Unserved Demand Flex = 541.9826097640445, Total Unserved Demand = 544.0471999910825
  Scenario 20 → Unserved Demand Fix = 2.262643097070459, Unserved Demand Flex = 563.1454591471858, Total Unserved Demand = 565.4081022442563
  Scenario 21 → Unserved Demand Fix = 2.1836349931567582, Unserved Demand Flex = 578.9475263485821, Total Unserved Demand = 581.1311613417388
  Scenario 22 → Unserved Demand Fix = 2.356358822598871, Unserved Demand Flex = 574.6009006012472, Total Unserved Demand = 576.957259423846
  Scenario 23 → Unserved Demand Fix = 20.923491455527795, Unserved Demand Flex = 725.8314937571358, Total Unserved Demand = 746.7549852126637
  Scenario 24 → Unserved Demand Fix = 2.2907995936230634, Unserved Demand Flex = 579.7800699431726, Total Unserved Demand = 582.0708695367957
  Scenario 25 → Unserved Demand Fix = 2.2634929530455423, Unserved Demand Flex = 637.716984610221, Total Unserved Demand = 639.9804775632665
  Scenario 26 → Unserved Demand Fix = 2.303070251598676, Unserved Demand Flex = 568.7372597795181, Total Unserved Demand = 571.0403300311168
  Scenario 27 → Unserved Demand Fix = 3.5383966862945044, Unserved Demand Flex = 676.8333838946475, Total Unserved Demand = 680.371780580942
  Scenario 28 → Unserved Demand Fix = 2.2587344564125758, Unserved Demand Flex = 606.5761019008545, Total Unserved Demand = 608.834836357267
  Scenario 29 → Unserved Demand Fix = 2.302735015976097, Unserved Demand Flex = 556.0938464546806, Total Unserved Demand = 558.3965814706567
  Scenario 2 → Unserved Demand Fix = 2.26601309227523, Unserved Demand Flex = 628.2430153851233, Total Unserved Demand = 630.5090284773985
  Scenario 30 → Unserved Demand Fix = 7.657810626530903, Unserved Demand Flex = 653.1195847480465, Total Unserved Demand = 660.7773953745774
  Scenario 3 → Unserved Demand Fix = 2.2396327129476674, Unserved Demand Flex = 781.1098877381047, Total Unserved Demand = 783.3495204510524
  Scenario 4 → Unserved Demand Fix = 2.3113597866454114, Unserved Demand Flex = 643.5144902482011, Total Unserved Demand = 645.8258500348466
  Scenario 5 → Unserved Demand Fix = 2.262208688301371, Unserved Demand Flex = 562.8891163456423, Total Unserved Demand = 565.1513250339436
  Scenario 6 → Unserved Demand Fix = 2.183239633135564, Unserved Demand Flex = 514.1738672391729, Total Unserved Demand = 516.3571068723085
  Scenario 7 → Unserved Demand Fix = 18.572097676313483, Unserved Demand Flex = 680.5000881154386, Total Unserved Demand = 699.0721857917521
  Scenario 8 → Unserved Demand Fix = 2.2904034816448373, Unserved Demand Flex = 568.1208017081325, Total Unserved Demand = 570.4112051897773
  Scenario 9 → Unserved Demand Fix = 2.201722207171116, Unserved Demand Flex = 509.473044891436, Total Unserved Demand = 511.67476709860716

Total Unserved Demand across all scenarios:
 Total Unserved Demand Fix = 12.282131290490518, Total Unserved Demand Flex = 611.3303576643331, Total Unserved Demand = 623.6124889548236
====================================


Total MWh of gas = 189843.04196014805
====================================


===== CVaR Tail Dual Analysis =====
Raw dual values (all shown):
  Scenario 10 → dual = -1.372971199295e-09
  Scenario 11 → dual = 3.336273902514e-10
  Scenario 12 → dual = 3.336236713449e-10
  Scenario 13 → dual = 3.338108393014e-10
  Scenario 14 → dual = 3.333162990981e-10
  Scenario 15 → dual = 3.334280998603e-10
  Scenario 16 → dual = 3.340327635403e-10
  Scenario 17 → dual = -1.027286517580e-09
  Scenario 18 → dual = 3.335335242867e-10
  Scenario 19 → dual = 3.335755378718e-10
  Scenario 1 → dual = 2.788314335434e-10
  Scenario 20 → dual = 3.335689110236e-10
  Scenario 21 → dual = 3.331364466034e-10
  Scenario 22 → dual = 3.340323782810e-10
  Scenario 23 → dual = 3.337058474342e-10
  Scenario 24 → dual = 3.337122077719e-10
  Scenario 25 → dual = 3.335656840646e-10
  Scenario 26 → dual = 3.337793427524e-10
  Scenario 27 → dual = 3.340265054778e-10
  Scenario 28 → dual = 3.335323954183e-10
  Scenario 29 → dual = 3.337712324253e-10
  Scenario 2 → dual = 3.335659296559e-10
  Scenario 30 → dual = 3.337093524626e-10
  Scenario 3 → dual = 3.334333326182e-10
  Scenario 4 → dual = -1.358802962292e-09
  Scenario 5 → dual = 3.335775372332e-10
  Scenario 6 → dual = 3.331551469884e-10
  Scenario 7 → dual = 3.336281535718e-10
  Scenario 8 → dual = 3.337056983563e-10
  Scenario 9 → dual = -1.430442143034e-09

Normalized risk-adjusted probabilities:
  Scenario 5 → risk_weight = 0.0973
  Scenario 16 → risk_weight = 0.0974
  Scenario 20 → risk_weight = 0.0973
  Scenario 12 → risk_weight = 0.0973
  Scenario 24 → risk_weight = 0.0973
  Scenario 28 → risk_weight = 0.0972
  Scenario 30 → risk_weight = 0.0973
  Scenario 8 → risk_weight = 0.0973
  Scenario 1 → risk_weight = 0.0813
  Scenario 19 → risk_weight = 0.0973
  Scenario 22 → risk_weight = 0.0974
  Scenario 23 → risk_weight = 0.0973
  Scenario 6 → risk_weight = 0.0971
  Scenario 11 → risk_weight = 0.0973
  Scenario 14 → risk_weight = 0.0972
  Scenario 3 → risk_weight = 0.0972
  Scenario 29 → risk_weight = 0.0973
  Scenario 7 → risk_weight = 0.0973
  Scenario 25 → risk_weight = 0.0973
  Scenario 13 → risk_weight = 0.0973
  Scenario 15 → risk_weight = 0.0972
  Scenario 21 → risk_weight = 0.0971
  Scenario 2 → risk_weight = 0.0973
  Scenario 18 → risk_weight = 0.0972
  Scenario 26 → risk_weight = 0.0973
  Scenario 27 → risk_weight = 0.0974
====================================

===== CVaR Constraint Tightness per Scenario =====
Scenario 10: welfare = 4.7235244763495e9, LHS = -4.723524461434e9, RHS = 11719.1227, Gap = -4.7235361805566e9
Scenario 11: welfare = 4.8826578233414e9, LHS = -4.8826578084259e9, RHS = 11719.1123, Gap = -4.8826695275382e9
Scenario 12: welfare = 4.8806804850285e9, LHS = -4.8806804701129e9, RHS = 11719.1123, Gap = -4.8806921892252e9
Scenario 13: welfare = 4.9647348624405e9, LHS = -4.9647348475249e9, RHS = 11719.112, Gap = -4.964746566637e9
Scenario 14: welfare = 4.74933507445e9, LHS = -4.7493350595345e9, RHS = 11719.1127, Gap = -4.7493467786472e9
Scenario 15: welfare = 4.796057467305e9, LHS = -4.7960574523894e9, RHS = 11719.1126, Gap = -4.796069171502e9
Scenario 16: welfare = 5.0673113657014e9, LHS = -5.0673113507859e9, RHS = 11719.1117, Gap = -5.0673230698976e9
Scenario 17: welfare = 4.7500922424698e9, LHS = -4.7500922275542e9, RHS = 11719.1695, Gap = -4.7501039467237e9
Scenario 18: welfare = 4.8409045279412e9, LHS = -4.8409045130257e9, RHS = 11719.1124, Gap = -4.8409162321381e9
Scenario 19: welfare = 4.8595111915438e9, LHS = -4.8595111766283e9, RHS = 11719.1123, Gap = -4.8595228957406e9
Scenario 1: welfare = 4.9517535953575e9, LHS = -4.951753580442e9, RHS = 11719.2746, Gap = -4.9517652997166e9
Scenario 20: welfare = 4.8566578189701e9, LHS = -4.8566578040546e9, RHS = 11719.1124, Gap = -4.8566695231669e9
Scenario 21: welfare = 4.6755842179978e9, LHS = -4.6755842030823e9, RHS = 11719.113, Gap = -4.6755959221952e9
Scenario 22: welfare = 5.0674396287333e9, LHS = -5.0674396138178e9, RHS = 11719.1117, Gap = -5.0674513329295e9
Scenario 23: welfare = 4.9174694466418e9, LHS = -4.9174694317262e9, RHS = 11719.1122, Gap = -4.9174811508384e9
Scenario 24: welfare = 4.9198609150052e9, LHS = -4.9198609000897e9, RHS = 11719.1122, Gap = -4.9198726192018e9
Scenario 25: welfare = 4.855684799417e9, LHS = -4.8556847845015e9, RHS = 11719.1124, Gap = -4.8556965036139e9
Scenario 26: welfare = 4.9499298068085e9, LHS = -4.9499297918929e9, RHS = 11719.1121, Gap = -4.949941511005e9
Scenario 27: welfare = 5.0647595143856e9, LHS = -5.06475949947e9, RHS = 11719.1117, Gap = -5.0647712185818e9
Scenario 28: welfare = 4.8400742709684e9, LHS = -4.8400742560529e9, RHS = 11719.1124, Gap = -4.8400859751653e9
Scenario 29: welfare = 4.9464108459452e9, LHS = -4.9464108310297e9, RHS = 11719.1121, Gap = -4.9464225501418e9
Scenario 2: welfare = 4.8555592486262e9, LHS = -4.8555592337107e9, RHS = 11719.1124, Gap = -4.855570952823e9
Scenario 30: welfare = 4.9185249378182e9, LHS = -4.9185249229027e9, RHS = 11719.1122, Gap = -4.9185366420149e9
Scenario 3: welfare = 4.7977278178973e9, LHS = -4.7977278029818e9, RHS = 11719.1126, Gap = -4.7977395220944e9
Scenario 4: welfare = 4.9651190676143e9, LHS = -4.9651190526987e9, RHS = 11719.138, Gap = -4.9651307718368e9
Scenario 5: welfare = 4.8596980781728e9, LHS = -4.8596980632573e9, RHS = 11719.1123, Gap = -4.8597097823697e9
Scenario 6: welfare = 4.6824064871288e9, LHS = -4.6824064722132e9, RHS = 11719.1129, Gap = -4.6824181913262e9
Scenario 7: welfare = 4.8827359060743e9, LHS = -4.8827358911588e9, RHS = 11719.1123, Gap = -4.882747610271e9
Scenario 8: welfare = 4.9175597219279e9, LHS = -4.9175597070124e9, RHS = 11719.1122, Gap = -4.9175714261245e9
Scenario 9: welfare = 4.7245806538907e9, LHS = -4.7245806389751e9, RHS = 11719.1128, Gap = -4.7245923580879e9
==================================================

========== MODEL STRUCTURE ==========

--- Objective Function ---
Sense: MAX_SENSE
Expression Type: QuadExpr
Symbolic Expression:
-360 d_flex[1,10]² - 330 d_flex[2,10]² - 300 d_flex[3,10]² - 570 d_flex[4,10]² - 570 d_flex[5,10]² - 660 d_flex[6,10]² - 300 d_flex[7,10]² - 450 d_flex[8,10]² - 270 d_flex[9,10]² - 1020 d_flex[10,10]² - 420 d_flex[11,10]² - 1140 d_flex[12,10]² - 1470 d_flex[13,10]² - 300 d_flex[14,10]² - 420 d_flex[15,10]² - 390 d_flex[16,10]² - 120 d_flex[17,10]² - 1620 d_flex[18,10]² - 1470 d_flex[19,10]² - 330 d_flex[20,10]² - 660 d_flex[21,10]² - 480 d_flex[22,10]² - 480 d_flex[23,10]² - 240 d_flex[24,10]² - 960 d_flex[25,10]² - 420 d_flex[26,10]² - 450 d_flex[27,10]² - 510 d_flex[28,10]² - 420 d_flex[29,10]² - 600 d_flex[30,10]² - [[...20100 terms omitted...]] - 240 d_flex[643,9]² - 570 d_flex[644,9]² - 180 d_flex[645,9]² - 330 d_flex[646,9]² - 360 d_flex[647,9]² - 330 d_flex[648,9]² - 360 d_flex[649,9]² - 330 d_flex[650,9]² - 420 d_flex[651,9]² - 1110 d_flex[652,9]² - 390 d_flex[653,9]² - 240 d_flex[654,9]² - 450 d_flex[655,9]² - 270 d_flex[656,9]² - 360 d_flex[657,9]² - 570 d_flex[658,9]² - 960 d_flex[659,9]² - 330 d_flex[660,9]² - 930 d_flex[661,9]² - 150 d_flex[662,9]² - 1200 d_flex[663,9]² - 1170 d_flex[664,9]² - 240 d_flex[665,9]² - 570 d_flex[666,9]² - 210 d_flex[667,9]² - 900 d_flex[668,9]² - 420 d_flex[669,9]² - 840 d_flex[670,9]² - 330 d_flex[671,9]² - 690 d_flex[672,9]² + 3600 d_fix[1,10] + 3600 d_flex[1,10] + 3300 d_fix[2,10] + 3300 d_flex[2,10] + 3000 d_fix[3,10] + 3000 d_flex[3,10] + 5700 d_fix[4,10] + 5700 d_flex[4,10] + 5700 d_fix[5,10] + 5700 d_flex[5,10] + 6600 d_fix[6,10] + 6600 d_flex[6,10] + 3000 d_fix[7,10] + 3000 d_flex[7,10] + 4500 d_fix[8,10] + 4500 d_flex[8,10] + 2700 d_fix[9,10] + 2700 d_flex[9,10] + 10200 d_fix[10,10] + 10200 d_flex[10,10] + 4200 d_fix[11,10] + 4200 d_flex[11,10] + 11400 d_fix[12,10] + 11400 d_flex[12,10] + 14700 d_fix[13,10] + 14700 d_flex[13,10] + 3000 d_fix[14,10] + 3000 d_flex[14,10] + 4200 d_fix[15,10] + 4200 d_flex[15,10] + [[...80587 terms omitted...]] - 34.666666666666664 q[Gas,643,9] - 82.33333333333333 q[Gas,644,9] - 26 q[Gas,645,9] - 47.666666666666664 q[Gas,646,9] - 52 q[Gas,647,9] - 47.666666666666664 q[Gas,648,9] - 52 q[Gas,649,9] - 47.666666666666664 q[Gas,650,9] - 60.666666666666664 q[Gas,651,9] - 160.33333333333334 q[Gas,652,9] - 56.333333333333336 q[Gas,653,9] - 34.666666666666664 q[Gas,654,9] - 65 q[Gas,655,9] - 39 q[Gas,656,9] - 52 q[Gas,657,9] - 82.33333333333333 q[Gas,658,9] - 138.66666666666666 q[Gas,659,9] - 47.666666666666664 q[Gas,660,9] - 134.33333333333334 q[Gas,661,9] - 21.666666666666668 q[Gas,662,9] - 173.33333333333334 q[Gas,663,9] - 169 q[Gas,664,9] - 34.666666666666664 q[Gas,665,9] - 82.33333333333333 q[Gas,666,9] - 30.333333333333332 q[Gas,667,9] - 130 q[Gas,668,9] - 60.666666666666664 q[Gas,669,9] - 121.33333333333333 q[Gas,670,9] - 47.666666666666664 q[Gas,671,9] - 99.66666666666667 q[Gas,672,9] - 4.822079578889407e9

--- Constraints ---

• Constraint Type: MathOptInterface.EqualTo{Float64}
  Symbolic Name: SOC_limit[H2,1,10]
  Sample Expression:
    -8.399999999999999 q_ch[H2,1,10] + 21.818181818181817 q_dch[H2,1,10] + e[H2,1,10] - 0.9 x_E[H2] ∈ MathOptInterface.EqualTo{Float64}(0.0)

• Constraint Type: MathOptInterface.GreaterThan{Float64}
  Symbolic Name: gen_limits[PV,1,10]
  Sample Expression:
    -q[PV,1,10] + 0.013833333 x_g[PV] ∈ MathOptInterface.GreaterThan{Float64}(0.0)

• Constraint Type: MathOptInterface.LessThan{Float64}
  Symbolic Name: d_fix_limit[1,10]
  Sample Expression:
    d_fix[1,10] + d_flex[1,10] ∈ MathOptInterface.LessThan{Float64}(59.6182498)

• Constraint Type: MathOptInterface.LessThan{Float64}
  Symbolic Name: cvar_tail_total[10]
  Sample Expression:
    10800 d_flex[1,10]² + 9900 d_flex[2,10]² + 9000 d_flex[3,10]² + 17100 d_flex[4,10]² + 17100 d_flex[5,10]² + 19800 d_flex[6,10]² + 9000 d_flex[7,10]² + 13500 d_flex[8,10]² + 8100 d_flex[9,10]² + 30600 d_flex[10,10]² + 12600 d_flex[11,10]² + 34200 d_flex[12,10]² + 44100 d_flex[13,10]² + 9000 d_flex[14,10]² + 12600 d_flex[15,10]² + 11700 d_flex[16,10]² + 3600 d_flex[17,10]² + 48600 d_flex[18,10]² + 44100 d_flex[19,10]² + 9900 d_flex[20,10]² + 19800 d_flex[21,10]² + 14400 d_flex[22,10]² + 14400 d_flex[23,10]² + 7200 d_flex[24,10]² + 28800 d_flex[25,10]² + 12600 d_flex[26,10]² + 13500 d_flex[27,10]² + 15300 d_flex[28,10]² + 12600 d_flex[29,10]² + 18000 d_flex[30,10]² + [[...612 terms omitted...]] + 32400 d_flex[643,10]² + 19800 d_flex[644,10]² + 13500 d_flex[645,10]² + 8100 d_flex[646,10]² + 13500 d_flex[647,10]² + 16200 d_flex[648,10]² + 6300 d_flex[649,10]² + 9900 d_flex[650,10]² + 5400 d_flex[651,10]² + 5400 d_flex[652,10]² + 8100 d_flex[653,10]² + 12600 d_flex[654,10]² + 6300 d_flex[655,10]² + 15300 d_flex[656,10]² + 17100 d_flex[657,10]² + 4500 d_flex[658,10]² + 9000 d_flex[659,10]² + 11700 d_flex[660,10]² + 9900 d_flex[661,10]² + 13500 d_flex[662,10]² + 15300 d_flex[663,10]² + 18000 d_flex[664,10]² + 9900 d_flex[665,10]² + 19800 d_flex[666,10]² + 7200 d_flex[667,10]² + 26100 d_flex[668,10]² + 13500 d_flex[669,10]² + 55800 d_flex[670,10]² + 18000 d_flex[671,10]² + 12600 d_flex[672,10]² + 180 q[Nuclear,1,10] + 1560 q[Gas,1,10] + 165 q[Nuclear,2,10] + 1430 q[Gas,2,10] + 150 q[Nuclear,3,10] + 1300 q[Gas,3,10] + 285 q[Nuclear,4,10] + 2470 q[Gas,4,10] + 285 q[Nuclear,5,10] + 2470 q[Gas,5,10] + 330 q[Nuclear,6,10] + 2860 q[Gas,6,10] + 150 q[Nuclear,7,10] + 1300 q[Gas,7,10] + 225 q[Nuclear,8,10] + 1950 q[Gas,8,10] + 135 q[Nuclear,9,10] + 1170 q[Gas,9,10] + 510 q[Nuclear,10,10] + 4420 q[Gas,10,10] + 210 q[Nuclear,11,10] + 1820 q[Gas,11,10] + 570 q[Nuclear,12,10] + 4940 q[Gas,12,10] + 735 q[Nuclear,13,10] + 6370 q[Gas,13,10] + 150 q[Nuclear,14,10] + 1300 q[Gas,14,10] + 210 q[Nuclear,15,10] + 1820 q[Gas,15,10] + [[...3309 terms omitted...]] - 54000 d_flex[652,10] - 81000 d_flex[653,10] - 126000 d_flex[654,10] - 63000 d_flex[655,10] - 153000 d_flex[656,10] - 171000 d_flex[657,10] - 45000 d_flex[658,10] - 90000 d_flex[659,10] - 117000 d_flex[660,10] - 99000 d_flex[661,10] - 135000 d_flex[662,10] - 153000 d_flex[663,10] - 180000 d_flex[664,10] - 99000 d_flex[665,10] - 198000 d_flex[666,10] - 72000 d_flex[667,10] - 261000 d_flex[668,10] - 135000 d_flex[669,10] - 558000 d_flex[670,10] - 180000 d_flex[671,10] - 126000 d_flex[672,10] + 103561.36299492574 x_g[PV] + 125438.90743779452 x_g[Wind_Onshore] + 339025.5411114903 x_g[Wind_Offshore] + 607878.2065721233 x_g[Nuclear] + 143127.98790348525 x_g[Gas] + 391384.6545604954 x_P[H2] + 125431.36482686523 x_P[BESS] - u_total[10] + ζ_total ∈ MathOptInterface.LessThan{Float64}(-4.822079578889404e9)

• Constraint Type: MathOptInterface.GreaterThan{Float64}
  Symbolic Name: (unnamed)
  Sample Expression:
    q[PV,1,10] ∈ MathOptInterface.GreaterThan{Float64}(0.0)

=====================================
